{
  "title": "Algoritma",
  "content": "Algoritma, belli bir problemi çözmek veya belirli bir amaca ulaşmak için tasarlanan yol. Matematikte ve bilgisayar biliminde bir işi yapmak için tanımlanan, bir başlangıç durumundan başladığında, açıkça belirlenmiş bir son durumunda sonlanan, sonlu işlemler kümesidir. Genellikle bilgisayar programlamada kullanılır ve tüm programlama dillerinin temeli algoritmaya dayanır. Aynı zamanda algoritma tek bir problemi çözecek davranışın, temel işleri yapan komutların veya deyimlerin adım adım ortaya konulmasıdır ve bu adımların sıralamasına dikkat edilmelidir. Bir problem çözülürken algoritmik ve sezgisel (herustic) olmak üzere iki yaklaşım vardır. Algoritmik yaklaşımda da çözüm için olası yöntemlerden en uygun olan seçilir ve yapılması gerekenler adım adım ortaya konulur. Algoritmayı belirtmek için; metinsel olarak düz ifade ve akış diyagramı olmak üzere 2 yöntem kullanılır. Algoritmalar bir programlama dili vasıtasıyla bilgisayarlar tarafından işletilebilirler.\nİlk algoritma, el-Hârizmî tarafından \"Hisab el-cebir ve el-mukabala\" kitabında sunulmuştur. Algoritma sözcüğü de el-Hârizmî'nin isminin Avrupalılarca telaffuzundan doğmuştur.\n\n\n== Tarihi ==\n\nAlgoritma sözcüğü, Özbekistan'ın Harezm bölgesindeki Hive kentinde doğmuş olan Ebu Abdullah Muhammed İbn Musa el Harezmi'den gelir. Bu alim 9. yüzyılda cebir alanındaki algoritmik çalışmalarını kitaba dökerek matematiğe çok büyük bir katkı sağlamıştır. \"Hisab el-cebir ve el-mukabala (حساب الجبر و المقابلة)\" kitabı dünyanın ilk cebir kitabı ve aynı zamanda ilk algoritma koleksiyonunu oluşturur. Latince çevirisi Avrupa'da çok ilgi görür. Alimin ismini telaffuz edemeyen Avrupalılar \"algorizm\" sözcüğünü \"Arap sayıları kullanarak aritmetik problemler çözme kuralları\" manasında kullanırlar. Bu sözcük daha sonra \"algoritma\"ya dönüşür ve genel kapsamda kullanılır.\n\n\n== Uygulama ==\nÇoğu algoritmalar bilgisayar olarak uygulanmak üzere tasarlanmıştır. Bununla birlikte, başka yöntemlerle de uygulanmaktadır, biyolojik sinir ağı (örneğin insan beyninin hesap yapması veya bir böceğin yemek araması), elektrik devresi veya mekanik cihazlar gibi.\nBilgisayar algoritmasına örnek verelim. Kullanıcının girdiği dört sayının ortalamasını görüntüleyen algoritmayı yazalım:\n\n A0 --> Başla\n A1 --> Sayaç=0 (Sayaç'ın ilk sayısı 0 olarak başlar.)\n A2 --> Sayı=? : T=T+Sayı (Sayıyı giriniz. T'ye sayıyı ekle ve T'yi göster.)\n A3 --> Sayaç=Sayaç+1 (Sayaç'a 1 ekle ve sayacı göster.)\n A4 --> Sayaç<4 ise A2'ye git. (Eğer sayaç 4'ten küçükse Adım 2'ye git.)\n A5 --> O=T/4 (Ortalama için T değerini 4'e böl)\n A6 --> O'yu göster. (Ortalamayı göster.)\n A7 --> Dur\n\nİkinci dereceden ax² + bx + c = 0 biçiminde bir denklemin tüm köklerini bulmak için algoritma yazalım:\n\nAdım 1: Başla.\nAdım 2: a, b, c, D, x1, x2, rp ve ip değişkenlerini tanımla.\nAdım 3: Diskriminant değerini hesapla.\nD ← b2-4ac\nAdım 4: Eğer D≥0\nx1 ← (-b+√D) / 2a\nx2 ← (-b-√D) / 2a\ndeğerlerini hesapla ve x1,x2 değişkenleri göster.\nEğer D≥0 değilse,\nGerçek kısım(rp) ve sanal kısmını(ip) hesapla.\nrp ← b / 2a\nip ← √ (D) / 2a\nAdım 5: \"rp + j(ip)\" ve \"rp - j(ip)\" değerlerini göster.\nAdım 6: Dur.\n\nKullanıcı tarafından girilen bir sayının faktöriyel değerini bulmak için bir algoritma yazalım:\n\nAdım 1: Başla.\nAdım 2: factorial, i ve n değişkenlerini tanımla.\nAdım 3: Değişkenlerin başlangıç değerlerini tanımla.\nfactorial ← 1\ni ← 1\nAdım 4: Ekrandan girilen n değerini oku.\nAdım 5: (i=n) eşitliği sağlanana kadar tekrarla.\n5.1: factorial←factorial*i\n5.2: i←i+1\nAdım 6: factorial değişkeninin değerini göster.\nAdım 7: Dur.\n\n\n== Hukuki Konular ==\nAlgoritmalar, tek başlarına, genellikle patent verilebilir değildirler. Amerika Birleşik Devletleri'nde soyut kavramların, sayıların ve işaretlerin yalnızca basit yönlendirmelerinden oluşan bir iddia \"süreç\" oluşturmaz (USPTO 2006) ve bundan dolayı algoritmalar patent verilebilir değildir (Gottschalk v.Benson'da olduğu gibi). Bununla birlikte, algoritmanın pratik uygulamaları zaman zaman patent verilebilirdir. Örneğin, Diamond v.Diehr'da, sentetik kauçuğun muhafaza edilmesine yardımcı olmak için kullanılan basit geri bildirim algoritmasının uygulaması patent verilebilir sayılmıştır. Yazılım patenti son derece tartışmalıdır ve algoritmaları içeren birçok eleştirilmiş patent vardır, özellikle veri sıkıştırma algoritmaları, Unisys' LZW patentinde olduğu gibi.\nEk olarak, bazı kriptografik algoritmaların ihracat kısıtlamaları vardır.\n\n\n== 1950'den Sonraki Tarihi ==\nFaaliyetlerin birçoğu algoritmanın tanımının geliştirilmesine yönlendirilmiştir ve aktifliği çevredeki sorunlar nedeniyle, özellikle matematiğin temelleri (özellikle Church-Turing tezi) ve akıl felsefesi (özellikle yapay zeka konusundaki tartışmalar) sebebiyle devam etmiştir.\n\n\n== Algoritmalara eleştirel yaklaşımlar ==\nAlgoritmaların kullanımı hayatın her alanında giderek yaygınlaşmaktadır. İş yerlerindeki performans değerlendirmelerinden bankaların kime kredi vereceğine, güvenlik sistemlerinden sosyal medya platformlarındaki önerilere kadar hayatın her alanında etkili olan algoritmalara özellikle de sosyal bilimci akademisyenler çeşitli eleştiriler yöneltmektedir. Algoritmaların teknolojik etkilerinin yanı sıra toplumsal bir güce de sahip oldukları, toplumsal gruplar arasındaki eşitsizlikleri derinleştirdikleri, yeni güç dengeleri oluşturdukları ve farklı otoriteler tarafından toplumun belli kesimlerini baskılamak için kullanıldıklarının altı çizilmektedir.\n\n\n== Önemli algoritma türleri ==\nArama algoritmaları\nBellek yönetimi algoritmaları\nBilgisayar grafiği algoritmaları\nBirleşimsel algoritmalar\nÇizge algoritmaları\nEvrimsel algoritmalar\nGenetik algoritmalar\nKripto algoritmaları veya kriptografik algoritmalar\nKök bulma algoritmaları\nOptimizasyon algoritmaları\nSıralama algoritmaları\nVeri sıkıştırma algoritmaları\n\n\n== Ayrıca bakınız ==\nAlgoritmalar listesi\nAlgoritmaların tarihsel sıralaması\nAlgokrasi\n\n\n== Kaynakça =="
}